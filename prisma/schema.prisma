// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
   provider = "postgresql"
   url      = env("DATABASE_URL")
 }

// datasource db {
//   provider = "postgresql"
//   url = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
// }

model User {
  clerk_id  String @id @db.VarChar(32)
  createdAt DateTime @default(now())
  name      String @db.VarChar(255)
  groups    GroupsOnUsers[]
  payed_expenses Expense[] @relation(name: "Payer")
  receiver_expenses Expense[] @relation(name: "Receiver")
  invites Invite[]
}

model Group {
  id        Int @id @default(autoincrement())
  name      String @db.VarChar(255)
  currency  String @db.VarChar(16)
  users     GroupsOnUsers[]
  expenses Expense[]
  invites Invite[]
}

model GroupsOnUsers {
  user User @relation(fields: [userId], references: [clerk_id])
  userId String @db.VarChar(32)
  group Group @relation(fields: [groupId], references: [id])
  groupId Int
  assignedAt DateTime @default(now())
  @@id([userId, groupId])
}

model Expense {
  id Int @id @default(autoincrement())
  name String?
  amount Int
  user User @relation(name: "Payer", fields: [payerId], references: [clerk_id])
  payerId String @db.VarChar(32)
  group Group @relation(fields: [groupId], references: [id])
  groupId Int
  isSplit Boolean @default(false)
  payedTo User? @relation(name: "Receiver", fields: [payedToId], references: [clerk_id])
  payedToId String? @db.VarChar(32)
  createdAt DateTime @default(now())
}

model Invite {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  lifeSpan Int
  group Group @relation(fields: [groupId], references: [id])
  groupId Int
  user User @relation(fields: [userId], references: [clerk_id])
  userId String @db.VarChar(32)
  isUsed Boolean @default(false)
}
